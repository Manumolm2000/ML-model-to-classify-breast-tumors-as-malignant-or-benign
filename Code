import pandas as pd
import numpy as ny
import matplotlib.pyplot as plt
from google.colab import files
uploaded = files.upload()
df2 = pd.read_csv('data.csv')
df2['diagnosis'].value_counts()
df2.shape
df2['diagnosis']
df2.columns
feature_df2 = df2[['radius_mean', 'texture_mean', 'perimeter_mean',
       'area_mean', 'smoothness_mean', 'compactness_mean', 'concavity_mean',
       'concave points_mean', 'symmetry_mean', 'fractal_dimension_mean',
       'radius_se', 'texture_se', 'perimeter_se', 'area_se', 'smoothness_se',
       'compactness_se', 'concavity_se', 'concave points_se', 'symmetry_se',
       'fractal_dimension_se', 'radius_worst', 'texture_worst',
       'perimeter_worst', 'area_worst', 'smoothness_worst',
       'compactness_worst', 'concavity_worst', 'concave points_worst',
       'symmetry_worst', 'fractal_dimension_worst']]
x = ny.asarray(feature_df2)
y = ny.asarray(df2['diagnosis'])
y
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test =train_test_split(x,y, test_size=0.2,random_state=4)
x_train.shape
y_train.shape
x_test.shape
y_test.shape
from sklearn import svm
classifier=svm.SVC(kernel='linear',C=2)
classifier.fit(x_train, y_train)
y_predict = classifier.predict(x_test)
from sklearn.metrics import classification_report
print(classification_report(y_test,y_predict))
